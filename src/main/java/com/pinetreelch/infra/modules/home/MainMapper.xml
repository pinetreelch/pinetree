<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.pinetreelch.infra.modules.home.MainMapper">

    <resultMap id="resultMapObj" type="com.pinetreelch.infra.modules.home.Main"></resultMap>
	
	<sql id ="selectCommon">
		FROM
	</sql>
	
	<insert id = "bookInsert"> 
		INSERT INTO tradBook(
       
        tdbkBookTitle
        ,tdbkSales
        ,tdbkPublisher
        ,tdbkIsbn

        )
        VALUES (
			
            #{tdbkBookTitle}
           ,#{tdbkSales}
           ,#{tdbkPublisher}
           ,#{tdbkIsbn}
        )
        	<selectKey resultType ="Integer" keyProperty = "tdbkSeq" order ="AFTER">
        		SELECT last_insert_id()
        	</selectKey>
	</insert>
	
	<update id = "bookUpdate"> 
		update 
			tradBook
		set
			tdbkBookTitle = #{tdbkBookTitle}
	        ,tdbkSales = #{tdbkSales}
	        ,tdbkPublisher = #{tdbkPublisher}
	        ,tdbkIsbn = #{tdbkIsbn}
		where 
			tdbkSeq = #{tdbkSeq}	        
	</update>
	
	<select id ="selectAllBook" resultMap="resultMapObj">
		select
			a.tdbkSeq
			,a.tdbkBookTitle
		    ,a.tdbkSales
		    ,a.tdbkPublisher
		    ,a.tdbkIsbn
		    ,a.registeredDate
		from tradBook a
		where 
			1=1
	</select> 
	
	
	<select id="selectList" resultMap="resultMapObj">
		select
			a.tdbkSeq
			,a.tdbkBookTitle
		    ,b.url
		    ,a.tdbkSubtitle
		    ,a.registeredDate
		from tradBook a
		left join bkUploaded b on pSeq = tdbkSeq 
		where 
			1=1
		order by registeredDate DESC
	
	</select>
	
	<select id="selectBook" resultMap="resultMapObj">
	
		select
			a.tdbkSeq
		    ,a.tdbkBookTitle
		    ,b.url
		    ,a.visitors
		from
			tradBook a
		left join bkUploaded b on a.tdbkSeq = b.pSeq
		where 
			1=1
		order by a.visitors DESC
    	
	</select>
	
	<select id="selectRandom" resultMap="resultMapObj">
		select
			a.tdbkSeq
		    ,a.tdbkBookTitle
		    ,b.url
		    ,b.urllarge
		from
			tradBook a
		left join bkUploaded b on a.tdbkSeq = b.pSeq
		where 
			1=1
		order by RAND();
	</select>
	
	<select id="selectRandomTwo" resultMap="resultMapObj">
		select
			a.tdbkSeq
		    ,a.tdbkBookTitle
		    ,b.url
		    ,b.urllarge
		from
			tradBook a
		left join bkUploaded b on a.tdbkSeq = b.pSeq
		where 
			1=1
		order by RAND();
	</select>
	
	<select id="selectList1" resultMap="resultMapObj">
 		select
			a.tdbkSeq
		    ,a.tdbkBookTitle
		    , c.tdauName
		    , b.tradAuthor_tdatSeq
		    , b.tradBook_tdbkSeq
			, c.tdauAuthorOrTranslator	
			, b.tdbkathSeq
		from
			tradBook a
		left join tradBookAuthor b on tradBook_tdbkSeq = tdbkSeq
		left join tradAuthor c on tradAuthor_tdatSeq =tdauSeq
		where 
			1=1
            AND c.tdauAuthorOrTranslator = 1
		order by a.visitors DESC

	
	</select>
	
	
	<!-- selectOne -->
	<select id = "selectOne" resultMap = "resultMapObj">
	SELECT 
	    a.tdbkSeq
	    ,b.urllarge
	    ,a.tdbkBookTitle
	    ,a.tdbkSubtitle
	    ,a.tdPaperprice
	    ,a.tdbkDiscountprice
	    ,a.tdbkSales
	    ,a.tdbkIntro
	    ,a.tdbkIntro2
	    ,a.tdbkPusblisherOpinion
	    ,a.tdbkPusblisherOpinion2
	    ,a.tdbkToc
	    ,a.tdbkToc2
	    ,a.tdbkPublisher
	    ,a.tdbkDop
	    ,a.tdbkDopType
	    ,a.tdbkDopPaper
	    ,a.tdbkDopPtype
	    ,a.tdbkGenre
	    ,a.tdbkListenFunction
	    ,a.tdbkFileinfo
	    ,a.tdbkSupportDevice
	    ,a.tdbkIsbn
	FROM tradBook a
	LEFT JOIN bkUploaded b ON a.tdbkSeq = b.pSeq
	where 1=1
		AND tdbkSeq = #{tdbkSeq}
	</select>
	
	<select id = "selectOneBook" resultMap = "resultMapObj">
	select
		a.tdbkSeq
	    ,b.urllarge
	    ,a.tdbkBookTitle
	    ,a.tdbkSales
	from
		tradBook a
	left join bkUploaded b on a.tdbkSeq = b.pSeq
	where
		1=1
		AND a.tdbkSeq = #{tdbkSeq}	
	</select>
	
	<select id = "bookOne" resultMap = "resultMapObj">
	select
		a.tdbkSeq
		,a.tdbkBookTitle
	    ,a.tdbkSales
	    ,a.tdbkPublisher
	    ,a.tdbkIsbn
	    ,a.registeredDate
	from tradBook a
	where 
		1=1	
		AND a.tdbkSeq = #{tdbkSeq}
	</select>
	
	<select id = "selectPurchased" resultMap = "resultMapObj">
	select
		a.buyinfoSeq
	    , a.date
	    , a.totalprice
	    , a.orderuuid
	    , a.means
	    , a.infraMember_ifmmSeq
	    , b.bookseq
	    , c.tdbkBookTitle
	    , c.tdbkSales
	from
		buy a
	left join buydetail b on a.buyinfoSeq = b.buy_buyinfoSeq
	left join tradBook c on b.bookseq = c.tdbkSeq
	where
		1=1
	    AND buyinfoSeq = #{buyinfoSeq}
	</select>
	
	<select id = "selectOneAuthor" resultMap = "resultMapObj">
	select 
		a.tdbkathSeq
		, b.tdbkSeq
	    , b.tdbkBookTitle
	    , c.tdauName
	    , c.tdauNameEng
	 from
		tradBookAuthor a
	left join tradBook b on b.tdbkSeq = a.tradBook_tdbkSeq
	left join tradAuthor c on c.tdauSeq = a.tradAuthor_tdatSeq 
	where 
		1=1
	    AND a.tdbkathSeq = #{tdbkathSeq}
	</select>
	
	<select id = "selectListAuthor" resultMap = "resultMapObj">
	select
		a.tdbkSeq
	    ,a.tdbkBookTitle
	    ,c.tdauSeq
	    ,c.tdauName
	    ,c.tdauNameEng
	    ,c.tdauAuthorOrTranslator
	    ,c.tdauIntro
	    ,c.tdauIntro2
	from
		tradBook a
	left join tradBookAuthor b on tradBook_tdbkSeq = tdbkSeq
	left join tradAuthor c on tdauSeq =tradAuthor_tdatSeq
	where 
		1=1  
		AND tdauAuthorOrTranslator = 1 
	</select>
	
		<select id = "selectListTranslator" resultMap = "resultMapObj">
	select
		a.tdbkSeq
	    ,a.tdbkBookTitle
		,c.tdauSeq
	    ,c.tdauName
	    ,c.tdauNameEng
	    ,c.tdauAuthorOrTranslator
	    ,c.tdauIntro
	    ,c.tdauIntro2 
	    
	from
		tradBook a
	left join tradBookAuthor b on tradBook_tdbkSeq = tdbkSeq
	left join tradAuthor c on tdauSeq =tradAuthor_tdatSeq
	where 
		1=1
		AND tdbkSeq = #{tdbkSeq}
		AND tdauAuthorOrTranslator = 0
	</select> 
	
	<select id = "selectBooks" resultMap = "resultMapObj">
	select
		a.tdbkSeq
        , d.urllarge
        , a.tdbkBookTitle
        , c.tdauName
        , b.tradAuthor_tdatSeq
        , a.tdbkIntro3
        , a.tdbkGenre
        , a.tdbkPublisher
        , a.tdbkSales
    from
		tradBook a
	left join tradBookAuthor b on b.tradBook_tdbkSeq = a.tdbkSeq
    left join tradAuthor c on b.tradAuthor_tdatSeq = c.tdauSeq
    left join bkUploaded d on a.tdbkSeq = d.pSeq
    where
		1=1
        AND  b.tradAuthor_tdatSeq = #{tradAuthor_tdatSeq}
	</select> 
	
	<insert id = "insertbuy"> 
		INSERT INTO buy(	
			date
			,infraMember_ifmmSeq
			,orderuuid
			,totalprice
			,means
		)
		
		VALUES(
			#{modDateTime}
			,#{ifmmSeq}
			,#{orderuuid}
			,#{totalprice}
			,#{means}
		)	
	
	</insert>

</mapper>